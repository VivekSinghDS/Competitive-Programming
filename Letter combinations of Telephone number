#17. Letter Combinations of a Phone Number
from collections import deque

class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        if digits=='':
            return []
        
        symbols = {
                    '2':['a','b','c',],
                    '3':['d','e','f'],
                    '4':['g','h','i'],
                    '5':['j','k','l'],
                    '6':['m','n','o'],
                    '7':['p','q','r','s'],
                    '8':['t','u','v'],
                    '9':['w','x','y','z']
                }
        
        
        q = deque(symbols[digits[0]])
        for c in digits[1:]:
            m = len(q)
            for i in range(m):
                prefix = q.popleft()
                for s in symbols[c]:
                    q.append(prefix+s)
                    
        return q
        
        
'''
Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]

Input: digits = "234"
Output: ["adg","adh","adi","aeg","aeh","aei","afg","afh","afi","bdg","bdh","bdi","beg","beh","bei","bfg","bfh","bfi","cdg","cdh","cdi","ceg","ceh","cei","cfg","cfh","cfi"]







'''
